/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from "./routes/__root";
import { Route as IndexRouteImport } from "./routes/index";
import { Route as LoginIndexRouteImport } from "./routes/login/index";
import { Route as MainIndexRouteImport } from "./routes/main/index";
import { Route as ProfileIndexRouteImport } from "./routes/profile/index";
import { Route as SigninIndexRouteImport } from "./routes/signin/index";

const IndexRoute = IndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any);
const SigninIndexRoute = SigninIndexRouteImport.update({
  id: "/signin/",
  path: "/signin/",
  getParentRoute: () => rootRouteImport,
} as any);
const ProfileIndexRoute = ProfileIndexRouteImport.update({
  id: "/profile/",
  path: "/profile/",
  getParentRoute: () => rootRouteImport,
} as any);
const MainIndexRoute = MainIndexRouteImport.update({
  id: "/main/",
  path: "/main/",
  getParentRoute: () => rootRouteImport,
} as any);
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: "/login/",
  path: "/login/",
  getParentRoute: () => rootRouteImport,
} as any);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/login": typeof LoginIndexRoute;
  "/main": typeof MainIndexRoute;
  "/profile": typeof ProfileIndexRoute;
  "/signin": typeof SigninIndexRoute;
}
export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/login": typeof LoginIndexRoute;
  "/main": typeof MainIndexRoute;
  "/profile": typeof ProfileIndexRoute;
  "/signin": typeof SigninIndexRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  "/": typeof IndexRoute;
  "/login/": typeof LoginIndexRoute;
  "/main/": typeof MainIndexRoute;
  "/profile/": typeof ProfileIndexRoute;
  "/signin/": typeof SigninIndexRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/login" | "/main" | "/profile" | "/signin";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/login" | "/main" | "/profile" | "/signin";
  id: "__root__" | "/" | "/login/" | "/main/" | "/profile/" | "/signin/";
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  LoginIndexRoute: typeof LoginIndexRoute;
  MainIndexRoute: typeof MainIndexRoute;
  ProfileIndexRoute: typeof ProfileIndexRoute;
  SigninIndexRoute: typeof SigninIndexRoute;
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/signin/": {
      id: "/signin/";
      path: "/signin";
      fullPath: "/signin";
      preLoaderRoute: typeof SigninIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/profile/": {
      id: "/profile/";
      path: "/profile";
      fullPath: "/profile";
      preLoaderRoute: typeof ProfileIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/main/": {
      id: "/main/";
      path: "/main";
      fullPath: "/main";
      preLoaderRoute: typeof MainIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/login/": {
      id: "/login/";
      path: "/login";
      fullPath: "/login";
      preLoaderRoute: typeof LoginIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  MainIndexRoute: MainIndexRoute,
  ProfileIndexRoute: ProfileIndexRoute,
  SigninIndexRoute: SigninIndexRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
